# trigger:
# - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  subscription: Visual Studio Enterprise(17b12858-3960-4e6f-a663-a06fdae23428)
  resourceGroup: Testing
  storageAccount: vishalbajpai22240
  container: container123
  tfstateFile: terraform.tfstate
  anyTfChanges: false

steps:

- task: TerraformInstaller@0
  displayName: install Terraform v0.12.28
  inputs:
    terraformVersion: '0.12.28'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'Vishal Bajpai(e6f05ee7-c125-4f22-8062-3bd1a14c72a1)'
    backendAzureRmResourceGroupName: 'Kubernetes'
    backendAzureRmStorageAccountName: '$(storageAccount)'
    backendAzureRmContainerName: '$(Container)'
    backendAzureRmKey: '$(tfstateFile)'

- task: TerraformTaskV1@0
  displayName: terraform plan -out=tfplan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
    commandOptions: '-out=tfplan'
    environmentServiceNameAzureRM: 'Vishalbajpai-SP'

- task: TerraformTaskV1@0
  displayName: terraform apply tfplan
  condition: eq(variables.anyTfChanges, true)
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
    commandOptions: 'tfplan'
    environmentServiceNameAzureRM: 'Vishal Bajpai(1)(e6f05ee7-c125-4f22-8062-3bd1a14c72a1)'
